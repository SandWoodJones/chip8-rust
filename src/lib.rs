#[allow(non_snake_case)]
pub mod CPU;

static FONTSET: [u8; 80] = [ 0xF0, 0x90, 0x90, 0x90, 0xF0,	 // 0
							 0x20, 0x60, 0x20, 0x20, 0x70,	 // 1
							 0xF0, 0x10, 0xF0, 0x80, 0xF0,	 // 2
							 0xF0, 0x10, 0xF0, 0x10, 0xF0,	 // 3
							 0x90, 0x90, 0xF0, 0x10, 0x10,	 // 4
							 0xF0, 0x80, 0xF0, 0x10, 0xF0,	 // 5
							 0xF0, 0x80, 0xF0, 0x90, 0xF0,	 // 6
							 0xF0, 0x10, 0x20, 0x40, 0x40,	 // 7
							 0xF0, 0x90, 0xF0, 0x90, 0xF0,	 // 8
							 0xF0, 0x90, 0xF0, 0x10, 0xF0,	 // 9
							 0xF0, 0x90, 0xF0, 0x90, 0x90,	 // A
							 0xE0, 0x90, 0xE0, 0x90, 0xE0,	 // B
							 0xF0, 0x80, 0x80, 0x80, 0xF0,	 // C
							 0xE0, 0x90, 0x90, 0x90, 0xE0,	 // D
							 0xF0, 0x80, 0xF0, 0x80, 0xF0,	 // E
							 0xF0, 0x80, 0xF0, 0x80, 0x80 ]; // F

// define the pieces of the cpu
#[allow(non_snake_case)]
pub struct CHIP8 {
	opcode: u16, // current opcode
	memory: [u8; 4096],
	V: [u8; 16], // cpu registers
	I: u16, // index register
	pc: u16, // program counter
	gfx: [u8; 64 * 32], // visual ram
	delay_timer: u8,
	sound_timer: u8,
	stack: [u16; 16],
	sp: u16, // stack pointer
	key: [u8; 16]
}

pub fn run(mut machine: CHIP8) {
	// create window
	// opengl, etc

	loop {
		machine.emulate_cycle();
	}
}
